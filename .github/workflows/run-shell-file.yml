# name: Run Docker Compose

# on:
#   push:
#     branches:
#       - develop

# jobs:
#   DOCKER_BUILD_PUSH:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v2

#       - name: Set up Docker Buildx
#         uses: docker/setup-buildx-action@v1

#       - name: Log in to Docker Hub
#         run: docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}

#       - name: Build and push Docker image
#         run: |
#           docker buildx build --platform linux/arm64,linux/amd64 -t pinomaker/mars-game:latest-arm64 -t pinomaker/mars-game:latest-amd64 --file Dockerfile.dev . --push
#   SET_SSH:
#     runs-on: ubuntu-latest
#     needs: DOCKER_BUILD_PUSH
#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v2

#       - name: Initialize Known Hosts
#         run: |
#           mkdir -p ~/.ssh
#           touch ~/.ssh/known_hosts
#           ssh-keyscan ${{ secrets.EC2_HOST_DEV }} >> ~/.ssh/known_hosts

#       - name: Set Permissions for Private Key
#         run: |
#           echo "${{ secrets.DEPLOY_SSH_KEY }}" > $HOME/key.pem
#           chmod 400 $HOME/key.pem

#       - name: Copy files to EC2 instance
#         run: |
#           scp -i $HOME/key.pem ./docker-compose.yml ubuntu@${{ secrets.EC2_HOST_DEV }}:/home/ubuntu/temporence
#           scp -i $HOME/key.pem ./Dockerfile.dev ubuntu@${{ secrets.EC2_HOST_DEV }}:/home/ubuntu/temporence
#           scp -i $HOME/key.pem ./.dockerignore ubuntu@${{ secrets.EC2_HOST_DEV }}:/home/ubuntu/temporence

#       - name: Run Docker Compose
#         env:
#           SSH_PEM_KEY: ${{ secrets.DEPLOY_SSH_KEY }}
#         run: |
#           ssh -i $HOME/key.pem -o StrictHostKeyChecking=no ubuntu@${{ secrets.EC2_HOST_DEV }} "cd /home/ubuntu/temporence && DOCKER_CLI_EXPERIMENTAL=enabled docker-compose up -d"
